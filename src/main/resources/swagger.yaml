openapi: 3.0.3
info:
  title: FocusShield Extension Backend API
  description: API for managing user authentication and focus mode configurations for the Chrome extension.
  version: 1.0.0

servers:
  - url: http://localhost:8181
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RegisterRequest:
      type: object
      required:
        - email
        - password
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    UpdateRequest:
      type: object
      required:
        - email
        - password
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    AuthResponse:
      type: object
      properties:
        token:
          type: string

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

    FocusConfigRequest:
      type: object
      properties:
        blockedSites:
          type: array
          items:
            type: string
        durationMinutes:
          type: integer
        isActive:
          type: boolean

    FocusConfigResponse:
      type: object
      properties:
        blockedSites:
          type: array
          items:
            type: string
        durationMinutes:
          type: integer
        isActive:
          type: boolean
        savedAt:
          type: string
          format: date-time

    RoleRequest:
      type: object
      required:
        - roleName
        - level
      properties:
        roleName:
          type: string
        level:
          type: integer

    RoleUpdateRequest:
      type: object
      required:
        - roleName
        - level
      properties:
        roleName:
          type: string
        level:
          type: integer

    RoleResponse:
      type: object
      properties:
        roleId:
          type: string
          format: uuid
        roleName:
          type: string
        level:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    AssignRoleRequest:
      type: object
      required:
        - email
        - roleName
      properties:
        email:
          type: string
          format: email
        roleName:
          type: string

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input or user already exists

  /api/auth/update:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
      responses:
        '201':
          description: User update successfully
        '400':
          description: Invalid input or user already exists

  /api/auth/login:
    post:
      summary: Authenticate user and return JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: JWT token returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Unauthorized

  /api/focus/save:
    post:
      summary: Save user focus configuration
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FocusConfigRequest'
      responses:
        '200':
          description: Config saved successfully
        '401':
          description: Unauthorized

  /api/focus/get:
    get:
      summary: Retrieve userâ€™s latest focus configuration
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Focus config returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FocusConfigResponse'
        '401':
          description: Unauthorized
  /api/roles:
    post:
      summary: Create a new role
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
      responses:
        '201':
          description: Role created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
        '400':
          description: Invalid input

    get:
      summary: Get all roles
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleResponse'

  /api/roles/{roleId}:
    put:
      summary: Update an existing role
      security:
        - bearerAuth: []
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUpdateRequest'
      responses:
        '200':
          description: Role updated successfully
        '404':
          description: Role not found

    delete:
      summary: Delete a role
      security:
        - bearerAuth: []
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Role deleted successfully
        '404':
          description: Role not found

  /api/users/assign-role:
    patch:
      summary: Assign a role to a user using email and role name
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
      responses:
        '200':
          description: Role assigned to user successfully
        '404':
          description: User or role not found
        '400':
          description: Invalid input
  /api/users/unassign-role:
    patch:
      summary: Unassign a role from a user using email and role name
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
      responses:
        '200':
          description: Role unassigned from user successfully
        '404':
          description: User or role not found
        '400':
          description: Invalid input